{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\IdeaProjects\\\\hugbo1\\\\frontend\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const location = useLocation();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState(''); // Changed from email to username\n  const [name, setName] = useState(''); // Only for sign-up\n  const [email, setEmail] = useState(''); // Only for sign-up\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // Only for sign-up\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check the current path and update the form state accordingly\n    setIsLogin(location.pathname === '/login');\n  }, [location.pathname]);\n  const toggleForm = () => {\n    const newPath = isLogin ? '/signup' : '/login';\n    navigate(newPath);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const url = isLogin ? '/api/login' : '/api/signup';\n    const requestData = isLogin ? {\n      username,\n      password\n    } // For login, only username and password are required\n    : {\n      username,\n      name,\n      email,\n      password,\n      confirmPassword\n    }; // For sign-up\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (response.ok) {\n        navigate('/'); // Redirect to home page on success\n      } else {\n        const error = await response.text();\n        setMessage(`Error: ${error}`);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), !isLogin &&\n        /*#__PURE__*/\n        // These fields only appear during sign-up\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: \"toggle-form-btn\",\n        children: isLogin ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"OJ/3YFBut2DN6ng+Hhczwre9Bco=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","location","isLogin","setIsLogin","username","setUsername","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","pathname","toggleForm","newPath","handleSubmit","event","preventDefault","url","requestData","response","fetch","method","headers","body","JSON","stringify","ok","error","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/IdeaProjects/hugbo1/frontend/src/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n    const location = useLocation();\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [username, setUsername] = useState('');  // Changed from email to username\r\n    const [name, setName] = useState('');          // Only for sign-up\r\n    const [email, setEmail] = useState('');        // Only for sign-up\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');  // Only for sign-up\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Check the current path and update the form state accordingly\r\n        setIsLogin(location.pathname === '/login');\r\n    }, [location.pathname]);\r\n\r\n    const toggleForm = () => {\r\n        const newPath = isLogin ? '/signup' : '/login';\r\n        navigate(newPath);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const url = isLogin ? '/api/login' : '/api/signup';\r\n        const requestData = isLogin\r\n            ? { username, password }  // For login, only username and password are required\r\n            : { username, name, email, password, confirmPassword };  // For sign-up\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate('/'); // Redirect to home page on success\r\n            } else {\r\n                const error = await response.text();\r\n                setMessage(`Error: ${error}`);\r\n            }\r\n        } catch (error) {\r\n            setMessage(`Error: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className=\"auth-container\">\r\n                <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n                <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username:</label>  {/* Changed label to Username */}\r\n                        <input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {!isLogin && (  // These fields only appear during sign-up\r\n                        <>\r\n                            <div className=\"form-group\">\r\n                                <label>Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Email:</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {!isLogin && (\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <button type=\"submit\" className=\"auth-btn\">\r\n                        {isLogin ? 'Login' : 'Sign Up'}\r\n                    </button>\r\n                </form>\r\n                <button onClick={toggleForm} className=\"toggle-form-btn\">\r\n                    {isLogin ? 'Sign Up' : 'Login'}\r\n                </button>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}