{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\IdeaProjects\\\\hugbo1\\\\frontend\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const location = useLocation();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Determine form type based on URL\n    if (location.pathname === '/signup') {\n      setIsLogin(false);\n    } else {\n      setIsLogin(true);\n    }\n  }, [location.pathname]);\n  const toggleForm = () => {\n    if (isLogin) {\n      navigate('/signup');\n    } else {\n      navigate('/login');\n    }\n    setMessage(''); // Clear any existing message\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const url = isLogin ? '/api/login' : '/api/signup';\n    const requestData = isLogin ? {\n      email,\n      password\n    } : {\n      email,\n      password,\n      confirmPassword\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (response.ok) {\n        navigate('/'); // Redirect to home page on success\n      } else {\n        const error = await response.text();\n        setMessage(`Error: ${error}`);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: \"toggle-form-btn\",\n        children: isLogin ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"fzShxoa9m/vHnLbRmvgBzNB8IAA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","LoginPage","_s","location","isLogin","setIsLogin","email","setEmail","password","setPassword","message","setMessage","confirmPassword","setConfirmPassword","navigate","pathname","toggleForm","handleSubmit","event","preventDefault","url","requestData","response","fetch","method","headers","body","JSON","stringify","ok","error","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/IdeaProjects/hugbo1/frontend/src/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n    const location = useLocation();\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Determine form type based on URL\r\n        if (location.pathname === '/signup') {\r\n            setIsLogin(false);\r\n        } else {\r\n            setIsLogin(true);\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    const toggleForm = () => {\r\n        if (isLogin) {\r\n            navigate('/signup');\r\n        } else {\r\n            navigate('/login');\r\n        }\r\n        setMessage(''); // Clear any existing message\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const url = isLogin ? '/api/login' : '/api/signup';\r\n        const requestData = isLogin\r\n            ? { email, password }\r\n            : { email, password, confirmPassword };\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                navigate('/'); // Redirect to home page on success\r\n            } else {\r\n                const error = await response.text();\r\n                setMessage(`Error: ${error}`);\r\n            }\r\n        } catch (error) {\r\n            setMessage(`Error: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className=\"auth-container\">\r\n                <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n                <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {!isLogin && (\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <button type=\"submit\" className=\"auth-btn\">\r\n                        {isLogin ? 'Login' : 'Sign Up'}\r\n                    </button>\r\n                </form>\r\n                <button onClick={toggleForm} className=\"toggle-form-btn\">\r\n                    {isLogin ? 'Sign Up' : 'Login'}\r\n                </button>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}